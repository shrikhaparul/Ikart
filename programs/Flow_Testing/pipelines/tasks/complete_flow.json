{
  "login_id": "Pavan",
  "id": 722,
  "project_name": "Flow_Testing",
  "pipeline_name": "Pandas_Transform",
  "project_id": 82,
  "pipeline_id": 216,
  "task_name": "complete_flow",
  "task_description": "expression_test for math ",
  "task_type": "Transformation",
  "task_sequence": "0",
  "last_run_id": null,
  "status": "New",
  "updated_dttm": "2024-06-19T09:13:10.000Z",
  "source": "none",
  "target": "none",
  "is_active": "Y",
  "created_by": "Pavan",
  "updated_by": "Pavan",
  "job_execution": "pandas",
  "task": {
    "flow": {
      "Joiner_joiner": "Input_postgres_tr1,Input_postgres_tr2",
      "Filter_filter_tr": "Joiner_joiner",
      "Input_postgres_tr1": "0",
      "Input_postgres_tr2": "0",
      "Output_output_postgres": "Expression_expression_01",
      "Expression_expression_01": "Filter_filter_tr"
    },
    "details": [
      {
        "Filter": [
          {
            "filter_tr": {
              "input_df": "jnr_uni",
              "output_df": "fil_jmw",
              "transformation_name": "filter_tr",
              "filter_tr_Group_476": {
                "id": "filter_tr_Group_476",
                "operator": "and",
                "group_name": "group_01",
                "Condition_01": "filter_tr_Operation_488",
                "Condition_02": "filter_tr_Operation_039",
                "condition_type": "group"
              },
              "id": {
                "label": "Filter",
                "displayName": "Filter"
              },
              "filter_tr_Operation_039": {
                "id": "filter_tr_Operation_039",
                "operator": "any==",
                "column_name": "col_2_left",
                "field_value": "('Asia','Europe','Middle East and North Africa','Sub-Saharan Africa')",
                "condition_type": "operation",
                "operation_name": "operation_02"
              },
              "filter_tr_Operation_488": {
                "id": "filter_tr_Operation_488",
                "operator": "between",
                "column_name": "col_1_left",
                "field_value": "(1,200)",
                "condition_type": "operation",
                "operation_name": "operation_01"
              }
            }
          }
        ]
      },
      {
        "Expression": [
          {
            "expression_01": {
              "input_df": "fil_jmw",
              "output_df": "exp_mke",
              "transformation_name": "expression_01",
              "expression_01_4": {
                "operator": "currency_conv",
                "sequence": "4",
                "operatorType": "Converter",
                "input_col_name": "col_13_right",
                "output_col_name": "USD",
                "expression_value": "currency_conv((col_13_left),INR,USD)"
              },
              "expression_01_5": {
                "operator": "to_gregorian",
                "sequence": "5",
                "operatorType": "Date and Time",
                "input_col_name": "",
                "output_col_name": "calender_date",
                "expression_value": "to_gregorian(julian_date)"
              },
              "expression_01_2": {
                "operator": "",
                "sequence": "2",
                "operatorType": "",
                "input_col_name": "col_3_left",
                "output_col_name": "Country",
                "expression_value": " "
              },
              "expression_01_3": {
                "operator": "to_julian",
                "sequence": "3",
                "operatorType": "Date and Time",
                "input_col_name": "col_7_left",
                "output_col_name": "julian_date",
                "expression_value": "to_julian(col_7_left)"
              },
              "expression_01_1": {
                "operator": "",
                "sequence": "1",
                "operatorType": "",
                "input_col_name": "col_1_left",
                "output_col_name": "Order_id",
                "expression_value": " "
              }
            }
          }
        ]
      },
      {
        "Joiner": [
          {
            "joiner": {
              "join_type": "left",
              "output_df": "jnr_uni",
              "left_input_df": "inp_bmd",
              "join_condition": "inp_bmd.col_1=inp_zqe.col_1",
              "right_input_df": "inp_zqe",
              "transformation_name": "joiner"
            }
          }
        ]
      },
      {
        "Input": [
          {
            "postgres_tr2": {
              "schema": "public",
              "output_df": "inp_zqe",
              "table_name": "dum_02",
              "source_type": "PostgreSQL",
              "select_columns": "col_1,col_10,col_11,col_12,col_13,col_14",
              "connection_name": "postgres_tr",
              "transformation_name": "postgres_tr2"
            }
          },
          {
            "postgres_tr1": {
              "schema": "public",
              "output_df": "inp_bmd",
              "table_name": "dum_01",
              "source_type": "PostgreSQL",
              "select_columns": "col_1,col_2,col_3,col_4,col_5,col_6,col_7,col_8,col_9",
              "connection_name": "postgres_tr",
              "transformation_name": "postgres_tr1"
            }
          }
        ]
      },
      {
        "Output": [
          {
            "output_postgres": {
              "schema": "public",
              "input_df": "exp_mke",
              "operation": "create",
              "table_name": "flow",
              "target_type": "PostgreSQL",
              "connection_name": "postgres_tr",
              "transformation_name": "output_postgres"
            }
          }
        ]
      }
    ]
  }
}