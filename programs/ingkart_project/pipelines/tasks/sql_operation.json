{
  "login_id": "shilpi",
  "id": 871,
  "project_name": "ingkart_project",
  "pipeline_name": "transforming_data",
  "project_id": 72,
  "pipeline_id": 240,
  "task_name": "sql_operation",
  "task_description": "using sql query to get unique data",
  "task_type": "Transformation",
  "task_sequence": "0",
  "last_run_id": "5899258b-2c41-41da-82eb-ead53880bf9a",
  "status": "Success",
  "updated_dttm": "2024-08-06T05:42:49.000Z",
  "source": "none",
  "target": "none",
  "is_active": "Y",
  "created_by": "shilpi",
  "updated_by": "shilpi",
  "job_execution": "pandas",
  "task": {
    "flow": {
      "SQL_query": "Expression_mask",
      "Output_result": "SQL_query",
      "Expression_mask": "Input_check_date",
      "Input_check_date": "0"
    },
    "details": [
      {
        "Expression": [
          {
            "mask": {
              "input_df": "inp_xns",
              "output_df": "exp_lqg",
              "transformation_name": "mask",
              "mask_8": {
                "operator": "",
                "sequence": "8",
                "operatorType": "",
                "input_col_name": "TIN",
                "output_col_name": "TIN",
                "expression_value": " "
              },
              "mask_1": {
                "operator": "",
                "sequence": "1",
                "operatorType": "",
                "input_col_name": "BusinessYear",
                "output_col_name": "BusinessYear",
                "expression_value": " "
              },
              "mask_10": {
                "operator": "mask_alphanumeric",
                "sequence": "10",
                "operatorType": "Data Masking",
                "input_col_name": "StandardComponentId",
                "output_col_name": "StandardComponentId",
                "expression_value": "mask_alphanumeric(StandardComponentId,*)"
              },
              "mask_16": {
                "operator": "",
                "sequence": "16",
                "operatorType": "",
                "input_col_name": "DomesticPartnerAsSpouseIndicator",
                "output_col_name": "DomesticPartnerAsSpouseIndicator",
                "expression_value": " "
              },
              "mask_6": {
                "operator": "mask_date",
                "sequence": "6",
                "operatorType": "Data Masking",
                "input_col_name": "ImportDate",
                "output_col_name": "ImportDate",
                "expression_value": "mask_date(ImportDate,#)"
              },
              "mask_20": {
                "operator": "",
                "sequence": "20",
                "operatorType": "",
                "input_col_name": "CohabitationRule",
                "output_col_name": "CohabitationRule",
                "expression_value": " "
              },
              "mask_3": {
                "operator": "",
                "sequence": "3",
                "operatorType": "",
                "input_col_name": "IssuerId",
                "output_col_name": "IssuerId",
                "expression_value": " "
              },
              "mask_4": {
                "operator": "",
                "sequence": "4",
                "operatorType": "",
                "input_col_name": "SourceName",
                "output_col_name": "SourceName",
                "expression_value": " "
              },
              "mask_14": {
                "operator": "",
                "sequence": "14",
                "operatorType": "",
                "input_col_name": "DependentMaximumAgRule",
                "output_col_name": "DependentMaximumAgRule",
                "expression_value": " "
              },
              "mask_13": {
                "operator": "",
                "sequence": "13",
                "operatorType": "",
                "input_col_name": "SingleParentFamilyMaxDependentsRule",
                "output_col_name": "SingleParentFamilyMaxDependentsRule",
                "expression_value": ""
              },
              "mask_12": {
                "operator": "substring",
                "sequence": "12",
                "operatorType": "String",
                "input_col_name": "TwoParentFamilyMaxDependentsRule",
                "output_col_name": "TwoParentFamilyMaxDependentsRule",
                "expression_value": "substring(TwoParentFamilyMaxDependentsRule,1,3)"
              },
              "mask_19": {
                "operator": "",
                "sequence": "19",
                "operatorType": "",
                "input_col_name": "MinimumTobaccoFreeMonthsRule",
                "output_col_name": "MinimumTobaccoFreeMonthsRule",
                "expression_value": " "
              },
              "mask_18": {
                "operator": "",
                "sequence": "18",
                "operatorType": "",
                "input_col_name": "AgeDeterminationRule",
                "output_col_name": "AgeDeterminationRule",
                "expression_value": " "
              },
              "mask_2": {
                "operator": "",
                "sequence": "2",
                "operatorType": "",
                "input_col_name": "StateCode",
                "output_col_name": "StateCode",
                "expression_value": " "
              },
              "mask_5": {
                "operator": "",
                "sequence": "5",
                "operatorType": "",
                "input_col_name": "VersionNum",
                "output_col_name": "VersionNum",
                "expression_value": " "
              },
              "mask_11": {
                "operator": "replace",
                "sequence": "11",
                "operatorType": "String",
                "input_col_name": "EnrolleeContractRateDeterminationRule",
                "output_col_name": "EnrolleeContractRateDeterminationRule",
                "expression_value": "replace(EnrolleeContractRateDeterminationRule,'(specifically for parties of two or more)','') "
              },
              "mask_17": {
                "operator": "",
                "sequence": "17",
                "operatorType": "",
                "input_col_name": "SameSexPartnerAsSpouseIndicator",
                "output_col_name": "SameSexPartnerAsSpouseIndicator",
                "expression_value": " "
              },
              "mask_15": {
                "operator": "",
                "sequence": "15",
                "operatorType": "",
                "input_col_name": "ChildrenOnlyContractMaxChildrenRule",
                "output_col_name": "ChildrenOnlyContractMaxChildrenRule",
                "expression_value": " "
              },
              "mask_9": {
                "operator": "",
                "sequence": "9",
                "operatorType": "",
                "input_col_name": "ProductId",
                "output_col_name": "ProductId",
                "expression_value": " "
              },
              "mask_7": {
                "operator": "",
                "sequence": "7",
                "operatorType": "",
                "input_col_name": "IssuerId2",
                "output_col_name": "IssuerId2",
                "expression_value": " "
              }
            }
          }
        ]
      },
      {
        "Input": [
          {
            "check_date": {
              "schema": "lnd",
              "output_df": "inp_xns",
              "table_name": "businesrules",
              "source_type": "PostgreSQL",
              "select_columns": "BusinessYear,StateCode,IssuerId,SourceName,VersionNum,ImportDate,IssuerId2,TIN,ProductId,StandardComponentId,EnrolleeContractRateDeterminationRule,TwoParentFamilyMaxDependentsRule,SingleParentFamilyMaxDependentsRule,DependentMaximumAgRule,ChildrenOnlyContractMaxChildrenRule,DomesticPartnerAsSpouseIndicator,SameSexPartnerAsSpouseIndicator,AgeDeterminationRule,MinimumTobaccoFreeMonthsRule,CohabitationRule,RowNumber,MarketCoverage,DentalOnlyPlan",
              "connection_name": "postgres_s",
              "transformation_name": "check_date"
            }
          }
        ]
      },
      {
        "Output": [
          {
            "result": {
              "schema": "lnd",
              "input_df": "sql_cgh",
              "operation": "create",
              "table_name": "businesrules_change_sql_exp",
              "target_type": "PostgreSQL",
              "connection_name": "postgres_s",
              "transformation_name": "result"
            }
          }
        ]
      },
      {
        "SQL": [
          {
            "query": {
              "input_df": "exp_lqg",
              "output_df": "sql_cgh",
              "sql_query": "select distinct *\nFROM exp_lqg;",
              "transformation_name": "query"
            }
          }
        ]
      }
    ]
  }
}