{
  "task_id": 276,
  "pipeline_id": 111,
  "task_name": "sql_orc1",
  "task_type": "SQL Execution",
  "sql_execution": {
    "connection_name": "mysql_connection_ikart_varun",
    "restart": "begin"
  },
  "sql_list": [
    {
      "seq_no": 2,
      "sql_query": "INSERT INTO products (product_id, product_price)\nVALUES \n    (201, 10.99),\n    (202, 15.50),\n    (203, 8.75),\n    (204, 12.25),\n    (205, 18.00);\n",
      "table_used_desc": "insert"
    },
    {
      "seq_no": 9,
      "sql_query": "drop table employees;\n",
      "table_used_desc": "drop"
    },
    {
      "seq_no": 3,
      "sql_query": "CREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_price DECIMAL(10, 2)\n);\n\n",
      "table_used_desc": "create"
    },
    {
      "seq_no": 7,
      "sql_query": "INSERT INTO order_items (order_item_id, order_id, product_id, quantity)\nVALUES \n    (301, 101, 201, 2),\n    (302, 101, 202, 1),\n    (303, 102, 203, 4),\n    (304, 103, 204, 3),\n    (305, 104, 205, 2),\n    (306, 105, 201, 1);\n",
      "table_used_desc": "insert"
    },
    {
      "seq_no": 6,
      "sql_query": "SELECT order_id, order_date, \n       SUM(product_price * quantity) OVER (PARTITION BY order_id ORDER BY product_id) AS running_total\nFROM orders o\nJOIN order_items oi ON o.order_id = oi.order_id\nJOIN products p ON oi.product_id = p.product_id\nORDER BY order_id, product_id;\n",
      "table_used_desc": "select"
    },
    {
      "seq_no": 5,
      "sql_query": "SELECT first_name, last_name, COUNT(*) AS num_duplicates\nFROM employees\nGROUP BY first_name, last_name\nHAVING COUNT(*) > 1;\n",
      "table_used_desc": "select"
    },
    {
      "seq_no": 7,
      "sql_query": "SELECT o.order_id, o.order_date, SUM(p.product_price * oi.quantity) AS total_value\nFROM orders o\nJOIN order_items oi ON o.order_id = oi.order_id\nJOIN products p ON oi.product_id = p.product_id\nGROUP BY o.order_id, o.order_date;\n",
      "table_used_desc": "select"
    },
    {
      "seq_no": 3,
      "sql_query": "SELECT employee_id, first_name, last_name, salary\nFROM employees\nWHERE salary = (SELECT MAX(salary) FROM employees);\n",
      "table_used_desc": "select"
    },
    {
      "seq_no": 10,
      "sql_query": "drop table orders;",
      "table_used_desc": "drop"
    },
    {
      "seq_no": 1,
      "sql_query": "CREATE TABLE order_items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    quantity INT,\n    FOREIGN KEY (order_id) REFERENCES orders(order_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);",
      "table_used_desc": "create"
    }
  ]
}