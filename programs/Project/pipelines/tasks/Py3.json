{
  "login_id": "sonika",
  "id": 801,
  "project_name": "Project",
  "pipeline_name": "Python_shell",
  "project_id": 84,
  "pipeline_id": 230,
  "task_name": "Py3",
  "task_description": "-----",
  "task_type": "Transformation",
  "task_sequence": "0",
  "last_run_id": null,
  "status": "New",
  "updated_dttm": "2024-08-21T11:16:15.000Z",
  "source": "none",
  "target": "none",
  "is_active": "Y",
  "created_by": "pab",
  "updated_by": "pab",
  "job_execution": "pandas",
  "task": {
    "flow": {
      "Input_inp_tr": "0",
      "Input_inp_tr1": "0",
      "Output_out_tr": "Python_py_code",
      "Python_py_code": "Input_inp_tr,Input_inp_tr1"
    },
    "details": [
      {
        "Input": [
          {
            "inp_tr": {
              "schema": "TEST",
              "output_df": "inp_yqs",
              "table_name": "EMPLOY_DATA",
              "source_type": "Oracle",
              "select_columns": "ID,FIRST_NAME_1,LAST_NAME,GENDER,BIRTH_DATE,EMPLOYMENT_STATUS,ANNUAL_SALARY,CRTD_BY,CRTD_DTTM,UPDT_BY,UPDT_DTTM",
              "connection_name": "Oracle_ec2_ser",
              "transformation_name": "inp_tr"
            }
          },
          {
            "inp_tr1": {
              "schema": "public",
              "output_df": "inp_rmd",
              "table_name": "employee_data",
              "source_type": "PostgreSQL",
              "select_columns": "id,first_name_1,last_name,gender,birth_date,employment_status,annual_salary,crtd_by,crtd_dttm,updt_by,updt_dttm",
              "connection_name": "Postgres_ec2",
              "transformation_name": "inp_tr1"
            }
          }
        ]
      },
      {
        "Output": [
          {
            "out_tr": {
              "schema": "pubic",
              "input_df": "python_hda",
              "operation": "replace",
              "table_name": "python_res",
              "target_type": "PostgreSQL",
              "connection_name": "Postgres_ec2",
              "transformation_name": "out_tr"
            }
          }
        ]
      },
      {
        "Python": [
          {
            "py_code": {
              "input_df": "inp_yqs,inp_rmd",
              "output_df": "python_hda",
              "script_type": "inline_code",
              "python_script": "import pandas as pd\n\ndef inner_join_and_sort(inp_yqs, inp_rmd):\n    # Convert all column names to lowercase\n    inp_yqs.columns = inp_yqs.columns.str.lower()\n    inp_rmd.columns = inp_rmd.columns.str.lower()\n\n    # Perform the inner join\n    joined_df = pd.merge(\n        inp_yqs,\n        inp_rmd,\n        how='inner',\n        on=['first_name_1', 'id', 'last_name']\n    )\n    \n    # Drop duplicate columns\n    joined_df = joined_df.loc[:, ~joined_df.columns.duplicated()]\n\n    # Sort by 'id'\n    sorted_df = joined_df.sort_values(by='id').reset_index(drop=True)\n    \n    return sorted_df",
              "select_columns": "id,first_name_1,last_name,gender,birth_date,employment_status,annual_salary,crtd_br,crtd_dttm,updt_by,updt_dttm",
              "transformation_name": "py_code"
            }
          }
        ]
      }
    ]
  }
}